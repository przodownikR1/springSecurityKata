apply from: './properties.gradle'

repositories {
    maven { url "http://localhost:8487/nexus/content/groups/public/" }
    maven { url "http://repo.spring.io/libs-milestone" }
    mavenLocal()
}

dependencies {
      compile("com.mysema.querydsl:querydsl-core:$queryDslVersion")
    compile("com.mysema.querydsl:querydsl-codegen:$queryDslVersion")
    compile("com.mysema.querydsl:querydsl-apt:$queryDslVersion")
    compile("com.mysema.querydsl:querydsl-mongodb:$queryDslVersion")



    compile ("org.codehaus.groovy:groovy:${groovyVersion}")
    compile("org.springframework.boot:spring-boot-starter-web")
   // compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
 

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile ("org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-logging")


    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.jasypt:jasypt:1.9.2")
    compile ("org.jasypt:jasypt-spring31:1.9.2")
    compile ("javax.mail:mail:1.4.7")

    compile ("org.springframework:spring-core:${springVersion}"){ exclude(module: 'commons-logging') }
    compile ("org.springframework:spring-beans:${springVersion}"){ exclude(module: 'commons-logging') }
    compile ("org.springframework:spring-context:${springVersion}"){ exclude(module: 'commons-logging') }
    compile ("org.springframework:spring-context-support:${springVersion}"){ exclude(module: 'commons-logging') }
    
    //compile ("org.springframework:spring-orm:${springVersion}"){ exclude(module: 'commons-logging') }
    //compile ("org.springframework:spring-tx:${springVersion}"){ exclude(module: 'commons-logging') }
    compile ("org.springframework:spring-aop:${springVersion}"){ exclude(module: 'commons-logging') }

    compile ("org.springframework:spring-aspects:${springVersion}"){ exclude(module: 'commons-logging') }
    compile ("org.springframework:spring-webmvc:${springVersion}"){ exclude(module: 'commons-logging') }


    compile ("com.sun.jersey:jersey-bundle:1.18")

    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("com.google.guava:guava:${guavaVersion}")


    compile ("javax.validation:validation-api:${javaxValidationVersion}")
    compile ("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile ("javax.el:el-api:2.2")
    compile ("org.glassfish.web:el-impl:2.2")


    compile("org.apache.httpcomponents:httpclient:${httpClientVersion}")
    compile("org.apache.httpcomponents:fluent-hc:${httpClientVersion}")


    compile ("com.jayway.restassured:rest-assured:2.3.3")
    compile ("com.jayway.jsonpath:json-path:0.9.1")

    
   compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE")
    compile("org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE")
    compile("org.webjars:jquery:2.1.1")
    compile("org.webjars:bootstrap:3.2.0")

    compile("com.google.code.gson:gson:${gsonVersion}")
    compile("org.yaml:snakeyaml:{snakeYamlVersion}")
    //   / providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")


    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    compile("org.mockito:mockito-all:$mockitoVersion")
    testCompile("junit:junit:$junitVersion")
    testCompile("org.easytesting:fest-assert:${festAssertVersion}")
    testCompile ("org.springframework:spring-test:${springVersion}")


}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion '4.1.0.RELEASE'
        }
    }
}

