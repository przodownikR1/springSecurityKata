buildscript {
    repositories {
        maven { url "http://localhost:8487/nexus/content/groups/public/" }
        maven { url "http://repo.spring.io/libs-milestone" }
        mavenLocal()
    }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.9.RELEASE") }
}

apply plugin: 'java'
apply from: "scriptGradle/depencencies.gradle"
apply plugin:  'maven'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply from: "scriptGradle/sonar.gradle"
apply from: "scriptGradle/querydsl.gradle"


sourceCompatibility = 1.8

group = 'pl.java.scalatech'
version = '0.1.0'

jar {
    baseName = 'springSecurityKata'
    version = '0.1.0'
}

war {
    baseName = 'springSecurityKata'
    version =  '0.1.0'
}



sourceSets {
    intTest
    generated {
        java { srcDirs = ['src/main/generated']}
    }
    main {
        java { srcDir 'src/main/java' }
        resources { srcDir 'src/main/resources' }
    }
    test {
        java { srcDir 'src/test/java' }
        resources { srcDir 'src/test/resources' }
    }
}



/*configurations {
 providedRuntime
 }*/


/*uploadArchives {
    repositories { flatDir { dirs 'repos' } }
}*/

uploadArchives {
    def nexusUsername = "admin"
    def nexusPassword = "admin123"
    repositories {
        mavenDeployer { repository(url: "http://localhost:8487/nexus/content/groups/public/"){
            authentication ( userName: nexusUsername, password: nexusPassword )
        }
        
    }
}
}
/*configurations.all {
resolutionStrategy {
    failOnVersionConflict()
  }
}*/



task testMongo(type: Test) {
    testLogging.showStandardStreams = true
    systemProperty 'spring.profiles.active','mongodb'
}

test {
    testLogging.showStandardStreams = true
    systemProperty 'spring.profiles.active','dev'
}





task wrapper(type: Wrapper) {  }
